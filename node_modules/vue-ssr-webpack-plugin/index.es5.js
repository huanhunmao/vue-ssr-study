var chalk = require('chalk')

var warn = function (msg) { return console.error(chalk.red(("[vue-ssr-webpack-plugin] " + msg + "\n"))); }
var tip = function (msg) { return console.log(chalk.yellow(("[vue-ssr-webpack-plugin] " + msg + "\n"))); }

var VueSSRPlugin = function VueSSRPlugin (options) {
  if ( options === void 0 ) options = {};

  this.options = options
};

VueSSRPlugin.prototype.apply = function apply (compiler) {
    var this$1 = this;

  if (compiler.options.target !== 'node') {
    warn(
      'webpack config `target` should be "node".'
    )
  }

  if (compiler.options.output && compiler.options.output.libraryTarget !== 'commonjs2') {
    warn(
      'webpack config `output.libraryTarget` should be "commonjs2".'
    )
  }

  if (!compiler.options.externals) {
    tip(
      'It is recommended to externalize dependencies for better ssr performance.\n' +
      "See " + (chalk.gray('https://github.com/vuejs/vue/tree/dev/packages/vue-server-renderer#externals')) + " " +
      'for more details.'
    )
  }

  compiler.plugin('emit', function (compilation, cb) {
    var stats = compilation.getStats().toJson()

    var entryName = this$1.options.entry || 'main'
    var entry = stats.assetsByChunkName[entryName]

    if (Array.isArray(entry)) {
      entry = entry.filter(function (file) { return file.match(/\.js$/); })[0]
    }

    if (!entry || typeof entry !== 'string') {
      throw new Error(
        ("Entry \"" + entryName + "\" not found. Did you specify the correct entry option?")
      )
    }

    var bundle = {
      entry: entry,
      files: {},
      maps: {}
    }

    stats.assets.forEach(function (asset) {
      if (asset.name.match(/\.js$/)) {
        bundle.files[asset.name] = compilation.assets[asset.name].source()
        delete compilation.assets[asset.name]
      } else if (asset.name.match(/\.js\.map$/)) {
        bundle.maps[asset.name.replace(/\.map$/, '')] = JSON.parse(compilation.assets[asset.name].source())
        delete compilation.assets[asset.name]
      }
    })

    var json = JSON.stringify(bundle, null, 2)
    var filename = this$1.options.filename || 'vue-ssr-bundle.json'

    compilation.assets[filename] = {
      source: function () { return json; },
      size: function () { return json.length; }
    }

    cb()
  })
};

module.exports = VueSSRPlugin

